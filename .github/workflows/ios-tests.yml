name: iOS Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'Mano/**', 'ManoTests/**', 'ManoUITests/**', 'Mano.xcodeproj/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'Mano/**', 'ManoTests/**', 'ManoUITests/**', 'Mano.xcodeproj/**' ]

jobs:
  test:
    name: Run iOS Tests
    runs-on: macos-latest
    
    strategy:
      matrix:
        destination: 
          - 'platform=iOS Simulator,name=iPhone 15 Pro,OS=18.1'
          - 'platform=iOS Simulator,name=iPad Pro (12.9-inch) (6th generation),OS=18.1'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
          ~/.cache/org.swift.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('Mano.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Resolve Swift Package Dependencies
      run: |
        xcodebuild -resolvePackageDependencies -project Mano.xcodeproj
    
    - name: Build for testing
      run: |
        xcodebuild build-for-testing \
          -project Mano.xcodeproj \
          -scheme Mano \
          -destination '${{ matrix.destination }}' \
          -derivedDataPath DerivedData \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Run unit tests
      run: |
        xcodebuild test-without-building \
          -project Mano.xcodeproj \
          -scheme Mano \
          -destination '${{ matrix.destination }}' \
          -derivedDataPath DerivedData \
          -only-testing:ManoTests \
          -resultBundlePath TestResults/UnitTests.xcresult \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
      continue-on-error: true
    
    - name: Run UI tests
      run: |
        xcodebuild test-without-building \
          -project Mano.xcodeproj \
          -scheme Mano \
          -destination '${{ matrix.destination }' \
          -derivedDataPath DerivedData \
          -only-testing:ManoUITests \
          -resultBundlePath TestResults/UITests.xcresult \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
      continue-on-error: true
    
    - name: Parse test results
      if: always()
      run: |
        if [ -d "TestResults/UnitTests.xcresult" ]; then
          xcrun xcresulttool get --format json --path TestResults/UnitTests.xcresult > unit-test-results.json
        fi
        if [ -d "TestResults/UITests.xcresult" ]; then
          xcrun xcresulttool get --format json --path TestResults/UITests.xcresult > ui-test-results.json
        fi
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.destination }}
        path: |
          TestResults/
          *-test-results.json
        retention-days: 7

  lint:
    name: Lint iOS Code
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install SwiftLint
      run: |
        brew install swiftlint
    
    - name: Lint Swift code
      run: |
        swiftlint lint --reporter github-actions-logging
      continue-on-error: true
    
    - name: Check Swift formatting (if swiftformat is used)
      run: |
        if command -v swiftformat &> /dev/null; then
          swiftformat --lint .
        else
          echo "SwiftFormat not installed, skipping format check"
        fi
      continue-on-error: true

  build:
    name: Build iOS App
    runs-on: macos-latest
    
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [iOS, macOS]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/SourcePackages
          ~/.cache/org.swift.swiftpm/
        key: ${{ runner.os }}-spm-${{ hashFiles('Mano.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build iOS
      if: matrix.platform == 'iOS'
      run: |
        xcodebuild build \
          -project Mano.xcodeproj \
          -scheme Mano \
          -destination 'generic/platform=iOS' \
          -configuration ${{ matrix.configuration }} \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
    
    - name: Build macOS
      if: matrix.platform == 'macOS'
      run: |
        xcodebuild build \
          -project Mano.xcodeproj \
          -scheme Mano \
          -destination 'generic/platform=macOS' \
          -configuration ${{ matrix.configuration }} \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO