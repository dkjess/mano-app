name: PR Checks

on:
  pull_request:
    branches: ['**']

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run Backend Tests
        working-directory: backend
        run: |
          # Run tests when available
          echo "Backend tests will run here"
          # deno test --allow-all

  ios-build:
    name: iOS Build Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build iOS App
        run: |
          xcodebuild -project Mano.xcodeproj \
            -scheme Mano \
            -configuration Debug \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=latest' \
            build

  branch-protection:
    name: Enforce Branch Rules
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    steps:
      - name: Check branch naming
        run: |
          # Allow feature/, hotfix/, and fix/ branches to merge to main
          if [[ "${{ github.head_ref }}" =~ ^(feature|hotfix|fix)/ ]]; then
            echo "✅ Valid branch name: ${{ github.head_ref }}"
            echo "Branch can merge to main"
          else
            echo "⚠️  WARNING: Branch name doesn't follow convention"
            echo "Current branch: ${{ github.head_ref }}"
            echo ""
            echo "Recommended naming:"
            echo "  - feature/* for new features"
            echo "  - hotfix/* for urgent production fixes"
            echo "  - fix/* for bug fixes"
            echo ""
            echo "Allowing merge anyway..."
          fi

  lint-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't block PRs on this check
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for sensitive data
        continue-on-error: true  # Warn only, don't block
        run: |
          # Check that no actual API keys or secrets are committed (exclude documentation)
          if git diff origin/${{ github.base_ref }}...HEAD | grep -E 'sk-ant-|ANTHROPIC_API_KEY.*sk-ant|SUPABASE_SERVICE_ROLE_KEY.*eyJ' | grep -v -E '(env.example|\.md|TESTING|README|CLAUDE\.md|#|mock|test|example)'; then
            echo "⚠️  Possible real secret detected in commit"
            echo "Please check that you haven't committed actual API keys"
            exit 1
          fi
          echo "✅ No secrets detected"
